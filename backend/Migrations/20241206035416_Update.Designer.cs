// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Data;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241206035416_Update")]
    partial class Update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("backend.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 28,
                            Name = "Action",
                            Type = "movie"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Adventure",
                            Type = "movie"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Animation",
                            Type = "movie"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Comedy",
                            Type = "movie"
                        },
                        new
                        {
                            Id = 80,
                            Name = "Crime",
                            Type = "movie"
                        },
                        new
                        {
                            Id = 99,
                            Name = "Documentary",
                            Type = "movie"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Drama",
                            Type = "movie"
                        },
                        new
                        {
                            Id = 10751,
                            Name = "Family",
                            Type = "movie"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Fantasy",
                            Type = "movie"
                        },
                        new
                        {
                            Id = 36,
                            Name = "History",
                            Type = "movie"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Horror",
                            Type = "movie"
                        },
                        new
                        {
                            Id = 10402,
                            Name = "Music",
                            Type = "movie"
                        },
                        new
                        {
                            Id = 9648,
                            Name = "Mystery",
                            Type = "movie"
                        },
                        new
                        {
                            Id = 10749,
                            Name = "Romance",
                            Type = "movie"
                        },
                        new
                        {
                            Id = 878,
                            Name = "Science Fiction",
                            Type = "movie"
                        },
                        new
                        {
                            Id = 10770,
                            Name = "TV Movie",
                            Type = "movie"
                        },
                        new
                        {
                            Id = 53,
                            Name = "Thriller",
                            Type = "movie"
                        },
                        new
                        {
                            Id = 10752,
                            Name = "War",
                            Type = "movie"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Western",
                            Type = "movie"
                        },
                        new
                        {
                            Id = 110759,
                            Name = "Action & Adventure",
                            Type = "tv"
                        },
                        new
                        {
                            Id = 100016,
                            Name = "Animation",
                            Type = "tv"
                        },
                        new
                        {
                            Id = 100035,
                            Name = "Comedy",
                            Type = "tv"
                        },
                        new
                        {
                            Id = 100080,
                            Name = "Crime",
                            Type = "tv"
                        },
                        new
                        {
                            Id = 100099,
                            Name = "Documentary",
                            Type = "tv"
                        },
                        new
                        {
                            Id = 100018,
                            Name = "Drama",
                            Type = "tv"
                        },
                        new
                        {
                            Id = 110751,
                            Name = "Family",
                            Type = "tv"
                        },
                        new
                        {
                            Id = 110762,
                            Name = "Kids",
                            Type = "tv"
                        },
                        new
                        {
                            Id = 109648,
                            Name = "Mystery",
                            Type = "tv"
                        },
                        new
                        {
                            Id = 110763,
                            Name = "News",
                            Type = "tv"
                        },
                        new
                        {
                            Id = 110764,
                            Name = "Reality",
                            Type = "tv"
                        },
                        new
                        {
                            Id = 110765,
                            Name = "Sci-Fi & Fantasy",
                            Type = "tv"
                        },
                        new
                        {
                            Id = 110766,
                            Name = "Soap",
                            Type = "tv"
                        },
                        new
                        {
                            Id = 110767,
                            Name = "Talk",
                            Type = "tv"
                        },
                        new
                        {
                            Id = 110768,
                            Name = "War & Politics",
                            Type = "tv"
                        },
                        new
                        {
                            Id = 100037,
                            Name = "Western",
                            Type = "tv"
                        });
                });

            modelBuilder.Entity("backend.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("GenreIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("bit");

                    b.Property<string>("Overview")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("PosterPath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("backend.Models.MovieGenre", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("MovieId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("MovieGenres");
                });

            modelBuilder.Entity("backend.Models.TVShow", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("FirstAirDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenreIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Overview")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("PosterPath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TVShows");
                });

            modelBuilder.Entity("backend.Models.TVShowGenre", b =>
                {
                    b.Property<int>("TVShowId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("TVShowId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("TVShowGenres");
                });

            modelBuilder.Entity("backend.Models.MovieGenre", b =>
                {
                    b.HasOne("backend.Models.Genre", "Genre")
                        .WithMany("MovieGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Movie", "Movie")
                        .WithMany("MovieGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("backend.Models.TVShowGenre", b =>
                {
                    b.HasOne("backend.Models.Genre", "Genre")
                        .WithMany("TVShowGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.TVShow", "TVShow")
                        .WithMany("TVShowGenres")
                        .HasForeignKey("TVShowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("TVShow");
                });

            modelBuilder.Entity("backend.Models.Genre", b =>
                {
                    b.Navigation("MovieGenres");

                    b.Navigation("TVShowGenres");
                });

            modelBuilder.Entity("backend.Models.Movie", b =>
                {
                    b.Navigation("MovieGenres");
                });

            modelBuilder.Entity("backend.Models.TVShow", b =>
                {
                    b.Navigation("TVShowGenres");
                });
#pragma warning restore 612, 618
        }
    }
}
